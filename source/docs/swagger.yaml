definitions:
  model.Checklist:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  model.Checklist_View:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  model.ChecklistItem:
    properties:
      Itemname:
        type: string
      checklist_id:
        type: string
      description:
        type: string
      status:
        type: boolean
    type: object
  model.CheklistItem_Update_name:
    properties:
      Itemname:
        type: string
    type: object
  model.CheklistItem_Update_status:
    properties:
      status:
        type: boolean
    type: object
  model.EditProfile:
    properties:
      about:
        type: string
      avatar:
        type: string
      country:
        type: string
      dateOfBirth:
        type: string
      email:
        type: string
      fullname:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  model.MetadataResponse:
    properties:
      additional_data:
        additionalProperties: {}
        type: object
      message:
        type: string
      pagination:
        $ref: '#/definitions/umongo.PaginationResponse'
      status:
        type: boolean
      timeExecution:
        type: string
    type: object
  model.User:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  model.User_Login:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  model.User_Search:
    properties:
      order:
        example: DESC
        type: string
      orderBy:
        example: createdAt
        type: string
      page:
        example: 1
        type: integer
      search:
        description: '? Regex'
        type: string
      size:
        example: 11
        type: integer
    type: object
  model.User_View:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  umongo.PaginationResponse:
    properties:
      size:
        type: integer
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
info:
  contact: {}
paths:
  /checklist:
    get:
      consumes:
      - application/json
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: size
        in: query
        name: size
        required: true
        type: integer
      - description: order
        in: query
        name: order
        required: true
        type: string
      - description: orderBy
        in: query
        name: orderBy
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/model.Checklist_View'
                type: array
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - Checklist
    post:
      consumes:
      - application/json
      parameters:
      - description: PARAM
        in: body
        name: parameter
        required: true
        schema:
          $ref: '#/definitions/model.Checklist'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            properties:
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - Checklist
  /checklist/{checklistId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: checklistId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - Checklist
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: checklistId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/model.Checklist_View'
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - Checklist
  /checklist/{checklistId}/item:
    get:
      consumes:
      - application/json
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: size
        in: query
        name: size
        required: true
        type: integer
      - description: order
        in: query
        name: order
        required: true
        type: string
      - description: orderBy
        in: query
        name: orderBy
        required: true
        type: string
      - description: ID
        in: path
        name: checklistId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/model.Checklist_View'
                type: array
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - Checklist
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: checklistId
        required: true
        type: string
      - description: PARAM
        in: body
        name: parameter
        required: true
        schema:
          $ref: '#/definitions/model.ChecklistItem'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            properties:
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - Checklist
  /checklist/{checklistId}/item/{checklistitemId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: checklistId
        required: true
        type: string
      - description: ID
        in: path
        name: checklistitemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - Checklist
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: checklistId
        required: true
        type: string
      - description: ID
        in: path
        name: checklistitemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/model.Checklist_View'
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - Checklist
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: checklistId
        required: true
        type: string
      - description: ID
        in: path
        name: checklistitemId
        required: true
        type: string
      - description: PARAM
        in: body
        name: parameter
        required: true
        schema:
          $ref: '#/definitions/model.CheklistItem_Update_status'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            properties:
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - Checklist
  /checklist/{checklistId}/item/rename/{checklistitemId}:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: checklistId
        required: true
        type: string
      - description: ID
        in: path
        name: checklistitemId
        required: true
        type: string
      - description: PARAM
        in: body
        name: parameter
        required: true
        schema:
          $ref: '#/definitions/model.CheklistItem_Update_name'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            properties:
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - Checklist
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: PARAM
        in: body
        name: parameter
        required: true
        schema:
          $ref: '#/definitions/model.User_Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      tags:
      - public
  /refresh:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - public
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: PARAM
        in: body
        name: parameter
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            properties:
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      tags:
      - public
  /user/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: PARAM
        in: body
        name: parameter
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            properties:
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - user
  /user/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - user
  /user/edit-profile:
    put:
      consumes:
      - application/json
      parameters:
      - description: PARAM
        in: body
        name: parameter
        required: true
        schema:
          $ref: '#/definitions/model.EditProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - user
  /user/get-all:
    post:
      consumes:
      - application/json
      parameters:
      - description: PARAM
        in: body
        name: parameter
        required: true
        schema:
          $ref: '#/definitions/model.User_Search'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/model.User_View'
                type: array
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - user
  /user/get-one:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/model.User_View'
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - user
  /user/profile:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/model.User_View'
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - user
  /user/update:
    put:
      consumes:
      - application/json
      parameters:
      - description: PARAM
        in: body
        name: parameter
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              meta_data:
                $ref: '#/definitions/model.MetadataResponse'
            type: object
      security:
      - JWT: []
      tags:
      - user
securityDefinitions:
  JWT:
    description: E.g. Bearer Your.Token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
